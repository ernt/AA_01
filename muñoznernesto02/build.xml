<?xml version="1.0"?>

<project basedir="." default="dist" name="AA">

<description>Build file for the Algorithm Analisis Computer Science Class. </description>

<!-- Set global properties for this build -->


<property name="src" relative="yes" location="src"/>

<property name="libs" relative="yes" location="libs"/>

<property name="tests" relative="yes" location="test"/>

<property name="build" relative="yes" location="build"/>

<property name="build.test" relative="yes" location="build.test"/>

<property name="docs" relative="yes" location="docs"/>

<property name="tests.report" relative="yes" location="reportes"/>

<property name="dist" relative="yes" location="dist"/>

<property name="mainClass" relative="yes" value="aa.Practica02"/>

<!-- Define the classpath which includes the libs -->



<path id="project.class.path">

<pathelement location="${libs}/junit-4.12.jar"/>

<pathelement location="${libs}/hamcrest-core-1.3.jar"/>

<pathelement location="${build}"/>

<pathelement location="${build.test}"/>

</path>


<target name="init">

<!-- Create the time stamp -->


<tstamp/>

<!-- Create the build directory structure used by compile -->


<mkdir dir="${build}"/>

</target>


<target name="compile" description="compiles the source code" depends="init">

<!-- Compile the java code from ${src} into ${build} -->


<javac debuglevel="lines,vars,source" debug="true" destdir="${build}" srcdir="${src}" includeantruntime="false"/>

</target>


<target name="compiletests" description="compile JUnit tests" depends="compile">

<!-- Create the build directory structure for the tests -->


<mkdir dir="${build.test}"/>

<!-- Compile the tests -->



<javac debuglevel="lines,vars,source" debug="true" destdir="${build.test}" srcdir="${tests}" includeantruntime="false">

<classpath refid="project.class.path"/>

</javac>

</target>


<target name="test" description="executes JUnit tests " depends="compiletests">

<mkdir dir="${tests.report}"/>

<!-- Details in: https://ant.apache.org/manual/Tasks/junit.html -->



<junit haltonfailure="yes" showoutput="yes" printsummary="yes" fork="true">

<classpath refid="project.class.path"/>

<formatter type="plain"/>


<batchtest todir="${tests.report}">


<fileset dir="${tests}">

<include name="**/*Test.java"/>

</fileset>

</batchtest>

</junit>

</target>


<target name="dist" description="generates the distribution" depends="compile">

<!-- Create the distribution directory -->


<mkdir dir="${dist}"/>


<jar jarfile="${dist}/${ant.project.name}.jar">


<manifest>

<attribute name="Class-Path" value="${ant.project.name}.jar"/>

<attribute name="Main-Class" value="${mainClass}"/>

</manifest>

<fileset dir="build" includes="*/.class"/>

<fileset dir="src" includes="*/.properties"/>

</jar>

</target>


<target name="run" depends="dist">

<!-- Executes the code, starting from ${mainClass} -->



<java fork="true" classname="${mainClass}">


<classpath>

<pathelement path="build"/>

</classpath>

</java>

</target>


<target name="clean" description="cleans up">

<!-- Delete all but ${src} and ${test} directory trees -->


<delete dir="${build}"/>

<delete dir="${dist}"/>

<delete dir="${build.test}"/>

<delete dir="${tests.report}"/>

<delete dir="${docs}"/>


<delete>

<fileset dir="." includes="*/~" defaultexcludes="false"/>

</delete>


<delete>

<fileset dir="." includes="*/.dat" defaultexcludes="false"/>

</delete>

</target>


<target name="docs" description="generates javadoc">

<!-- Generates all documentation -->



<javadoc destdir="${docs}/${src}" windowtitle="${ant.project.name}" version="true" author="true">


<fileset dir="${src}" defaultexcludes="yes">

<include name="*/.java"/>

</fileset>

</javadoc>

</target>


</project>
